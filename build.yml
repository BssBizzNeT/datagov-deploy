---
- hosts: geodatagov23
  user: ubuntu
  sudo: yes

  vars_prompt:
    - name: "local_solr"
      prompt: "Use local solr tarball? (yes/no)\nChoose yes on LAN to speed things up:"
      default: "no"
      private: no

  tasks:
    - name: make sure packages are installed
      action: apt pkg={{item}} state=installed update_cache=yes
      with_items:
        - htop
        - atool
        - ruby
        - python-virtualenv
        - python-setuptools
        - git
        - python-dev
        - ruby-dev
        - postgresql-client
        - bison
        - apache2
        - libapache2-mod-wsgi
        - python-pip
        - python-psycopg2
        - redis-server
        - libgeos-c1
        - libxml2-dev
        - libxslt1-dev
        - lib32z1-dev
        - default-jdk
        - tomcat6

#CKAN setup
    - name: remove old code
      action: file path=/usr/lib/ckan/src state=absent
    - name: create directories
      action: file path=/usr/lib/ckan/src state=directory

    - name: get ckan version
      action: git repo=https://github.com/GSA/ckan dest=/usr/lib/ckan/src/ckan version=2.3-upgrade

    - name: install requirements and make virtualenv
      action: pip requirements=/usr/lib/ckan/src/ckan/requirements.txt virtualenv=/usr/lib/ckan/ virtualenv_site_packages=yes

    - name: run setup.py develop for ckan
      action: command chdir=/usr/lib/ckan/src/ckan/ ../../bin/python setup.py develop

    - name: get harvest extension
      action: git repo=https://github.com/GSA/ckanext-harvest dest=/usr/lib/ckan/src/ckanext-harvest version=2.3-upgrade

    - name: install requirements for harvest
      action: pip requirements=/usr/lib/ckan/src/ckanext-harvest/pip-requirements.txt virtualenv=/usr/lib/ckan/

    - name: run setup.py develop for harvest
      action: command chdir=/usr/lib/ckan/src/ckanext-harvest/ ../../bin/python setup.py develop

    - name: get spatial extension
      action: git repo=https://github.com/GSA/ckanext-spatial dest=/usr/lib/ckan/src/ckanext-spatial version=2.3-upgrade

    - name: install requirements for spatial
      action: pip requirements=/usr/lib/ckan/src/ckanext-spatial/pip-requirements.txt virtualenv=/usr/lib/ckan/

    - name: run setup.py develop for spatial
      action: command chdir=/usr/lib/ckan/src/ckanext-spatial/ ../../bin/python setup.py develop

    - name: get datajson extension
      action: git repo=https://github.com/GSA/ckanext-datajson dest=/usr/lib/ckan/src/ckanext-datajson version=2.3-upgrade 

    - name: install requirements for datajson
      action: pip requirements=/usr/lib/ckan/src/ckanext-datajson/pip-requirements.txt virtualenv=/usr/lib/ckan/

    - name: run setup.py develop for datajson
      action: command chdir=/usr/lib/ckan/src/ckanext-datajson/ ../../bin/python setup.py develop

    - name: get geodatagov
      action: git repo=https://github.com/GSA/ckanext-geodatagov.git dest=/usr/lib/ckan/src/ckanext-geodatagov version=2.3-upgrade

    - name: install requirements for geodatagov
      action: pip requirements=/usr/lib/ckan/src/ckanext-geodatagov/pip-requirements.txt virtualenv=/usr/lib/ckan/

    - name: run setup.py develop for geodatagov
      action: command chdir=/usr/lib/ckan/src/ckanext-geodatagov/ ../../bin/python setup.py develop

    - name: get datagovtheme
      action: git repo=https://github.com/GSA/ckanext-datagovtheme.git dest=/usr/lib/ckan/src/ckanext-datagovtheme version=2.3-upgrade

    - name: run setup.py develop for datagovtheme
      action: command chdir=/usr/lib/ckan/src/ckanext-datagovtheme/ ../../bin/python setup.py develop

    - name: get archiver extension
      action: git repo=https://github.com/GSA/ckanext-archiver dest=/usr/lib/ckan/src/ckanext-archiver version=2.3-upgrade

    - name: install requirements for archiver
      action: pip requirements=/usr/lib/ckan/src/ckanext-archiver/pip-requirements.txt virtualenv=/usr/lib/ckan/

    - name: run setup.py develop for archiver
      action: command chdir=/usr/lib/ckan/src/ckanext-archiver/ ../../bin/python setup.py develop

    - name: get qa extension
      action: git repo=https://github.com/GSA/ckanext-qa dest=/usr/lib/ckan/src/ckanext-qa version=2.3-upgrade

    - name: install requirements for qa
      action: pip requirements=/usr/lib/ckan/src/ckanext-qa/pip-requirements.txt virtualenv=/usr/lib/ckan/

    - name: run setup.py develop for qa
      action: command chdir=/usr/lib/ckan/src/ckanext-qa/ ../../bin/python setup.py develop

    - name: get report extension
      action: git repo=https://github.com/GSA/ckanext-report dest=/usr/lib/ckan/src/ckanext-report version=2.3-upgrade

    - name: run setup.py develop for report
      action: command chdir=/usr/lib/ckan/src/ckanext-report/ ../../bin/python setup.py develop

    - name: Create symlinks
      file: src=/var/tmp/ckan/{{item}}  dest=/usr/lib/ckan/src/ckan/ckan/public/{{item}} state=link force=yes
      with_items:
        - usasearch-custom-feed.xml
        - csv

    - name: remove psycopg2
      action: pip name=psycopg2 virtualenv=/usr/lib/ckan/ state=absent

    - name: install supervisor
      action: pip name=supervisor virtualenv=/usr/lib/ckan/

    - name: create directories
      action: file path={{item}} state=directory
      with_items:
        - /etc/ckan

    - name: default apache removed
      action: file path=/etc/apache2/sites-enabled/000-default.conf state=absent

    - name: copy all needed files
      action: copy src={{item}} dest=/{{item}}
      with_items:
        - etc/ckan/who.ini
        - etc/ckan/apache.wsgi
        - etc/ckan/production.ini
        - etc/apache2/sites-enabled/ckan.conf
        - etc/cron.daily/remove_old_sessions
        - etc/supervisord.conf
        - etc/init/supervisor.conf
        - var/lib/tomcat6/webapps/fgdc2iso.war

    - name: point site_url in production.ini to localhost
      action: lineinfile dest=/etc/hosts line="127.0.0.1 catalog.data.gov"

    - name: copy executables
      action: copy src={{item}} dest=/{{item}} mode=744
      with_items:
        - usr/bin/ckan

    - name: Apache | Enable some required modules
      action: command a2enmod rewrite headers 
      tags: common

    - name: restart apache
      action: service name=apache2 state=restarted

##################################
# SOLR setup
##################################
    - name: prepare packages needed for solr
      action: apt pkg={{item}} state=installed
      with_items:
        - tomcat6

    - name: Download solr 4.2.1
      command: creates=~/solr-4.2.1.tgz chdir=~/ wget -T 40  http://archive.apache.org/dist/lucene/solr/4.2.1/solr-4.2.1.tgz
      when: local_solr == "no" or local_solr == "n"
    - name: Copy solr 4.2.1
      action: copy src=cache/solr-4.2.1.tgz dest=~/solr-4.2.1.tgz
      when: local_solr == "yes" or local_solr == "y"

    - name: Unpack solr
      shell: "cd ~/ && tar -zxvf solr-4.2.1.tgz && cd solr-4.2.1/dist && cp solr-4.2.1.war /var/lib/tomcat6/webapps/solr.war"

    - name: wait for the solr directory to be created
      wait_for: path=/var/lib/tomcat6/webapps/solr/WEB-INF/

    - name: Setup solr home folder
      shell: "mkdir -p /home/solr && cp -R ~/solr-4.2.1/example/solr/* /home/solr && mv /home/solr/collection1 /home/solr/ckan"

    - name: Change default solr collection1 to ckan
      replace: dest=/home/solr/solr.xml regexp='collection1' replace='ckan'

    - name: copy solr config files
      action: copy src={{item}} dest=/{{item}} mode=644 force=yes
      with_items:
        - var/lib/tomcat6/webapps/solr/WEB-INF/web.xml
        - home/solr/ckan/conf/schema.xml

    - name: Setup solr permissions
      shell: "chown -R tomcat6 /home/solr"

    - name: restarting tomcat service
      action: service name=tomcat6 state=restarted

##################################
# postgresql DB setup
##################################
    - name: make sure postgresql packages are installed
      action: apt pkg={{item}} state=installed
      with_items:
        - postgresql
        - postgis
        - postgresql-9.3-postgis-2.1

    - name: reload postgres config
      command: /etc/init.d/postgresql restart

    - name: create geo.gov role
      shell: psql -c "CREATE USER ckan WITH PASSWORD 'pass' SUPERUSER;"
      sudo: yes
      sudo_user: postgres

    - name: create ckan database
      shell: psql -c "CREATE DATABASE ckan OWNER ckan;"
      sudo: yes
      sudo_user: postgres

    - name: install postgis script
      shell: "psql -d ckan -f /usr/share/postgresql/9.3/contrib/postgis-2.1/postgis.sql"
      sudo: yes
      sudo_user: postgres

    - name: install postgis script
      shell: "psql -d ckan -f /usr/share/postgresql/9.3/contrib/postgis-2.1/spatial_ref_sys.sql"
      sudo: yes
      sudo_user: postgres

    - name: install postgis script
      shell: "psql -d ckan -f /usr/share/postgresql/9.3/contrib/postgis-2.1/rtpostgis.sql"
      sudo: yes
      sudo_user: postgres

    - name: install postgis script
      shell: "psql -d ckan -f /usr/share/postgresql/9.3/contrib/postgis-2.1/topology.sql"
      sudo: yes
      sudo_user: postgres

    - name: install postgis script
      shell: psql -d ckan -c "GRANT ALL PRIVILEGES ON spatial_ref_sys TO ckan;"
      sudo: yes
      sudo_user: postgres

    - name: copy locations sql script
      action: copy src={{item}} dest=/{{item}} mode=644
      with_items:
        - tmp/locations.sql.gz

    - name: create locations table
      shell: gunzip -c /tmp/locations.sql.gz | psql -d ckan
      sudo: yes
      sudo_user: postgres

    - name: Initialize ckan db
      action: command ckan db init

    - name: Initialize ckan report db
      action: command ckan --plugin=ckanext-report report initdb

##################################
# Start cron and backend services
##################################

    - name: copy all needed files
      action: copy src={{item}} dest=/{{item}}
      with_items:
        - etc/cron.d/ckan
        - etc/cron.d/supervisor

    - name: create superviserctl symlink
      action: file src=/usr/lib/ckan/bin/supervisorctl dest=/usr/bin/supervisorctl state=link

    - name: start supervisor
      action: command initctl start supervisor
##################################
# pycsw setup
##################################
    - name: create pycsw database
      shell: psql -c "CREATE DATABASE pycsw OWNER ckan;"
      sudo: yes
      sudo_user: postgres

    - name: add postgis to pycsw database
      shell: psql -d pycsw -c "CREATE EXTENSION postgis;"
      sudo: yes
      sudo_user: postgres

    - name: get pycsw version
      action: git repo=https://github.com/geopython/pycsw.git dest=/usr/lib/ckan/src/pycsw version=1.10.3

    - name: run setup build for pycsw
      action: command chdir=/usr/lib/ckan/src/pycsw/ ../../bin/python setup.py build

    - name: run setup install for pycsw
      action: command chdir=/usr/lib/ckan/src/pycsw/ ../../bin/python setup.py install

    - name: install pyproj
      action: pip name=pyproj version=1.9.3 virtualenv=/usr/lib/ckan/

    - name: install geolinks
      action: pip name=geolinks version=0.0.1 virtualenv=/usr/lib/ckan/

    - name: copy pycsw configuration files
      action: copy src={{item}} dest=/{{item}} mode=644
      with_items:
        - etc/ckan/pycsw-all.cfg
        - etc/ckan/pycsw-collection.cfg
        - etc/ckan/pycsw.wsgi
        - etc/cron.d/pycsw
        - usr/lib/ckan/bin/pycsw-db-admin.py
        - usr/lib/ckan/bin/pycsw-load.sh

    - name: Initialize pycsw db
      action: command chdir=/usr/lib/ckan/src/ckanext-spatial/ ../../bin/paster ckan-pycsw setup -p /etc/ckan/pycsw-all.cfg



